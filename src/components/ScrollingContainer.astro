---

const projectionsData = await fetch("https://raw.githubusercontent.com/sarameisner/frontend-design/main/resources/json/projections.json").then((res) => res.json());
import { Icon } from 'astro-icon/components';


const {values } = projectionsData;

---


<div class="scrolling">
  <div class="scrolling-top">
    <div class="text">
      <div class="icon">
        <Icon name="second" />
      </div>
      <h2>Financial Projections</h2>
      <p>
        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do
        eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim
        ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut
        aliquip ex ea commodo consequat.
      </p>
    </div>
    <div class="buttons">
      <button class="scroll-arrow left" id="scroll-left">&larr;</button>
      <button class="scroll-arrow right" id="scroll-right">&rarr;</button>
    </div>
  </div>


  <ul class="full-width">
    {values.map((value) => (
      <li>
        <div class="icon-card">
          <Icon name={value.icon} />
        </div>
        <h3>{value.title}</h3>
        <p>{value.description}</p>
      </li>
    ))}
  </ul>

</div>

<style>

html {
     --gap: clamp(1rem, 6vw, 3rem);
    --full: minmax(var(--gap), 1fr);
    --content: min(75rem, 100% - var(--gap) * 2);
}

.scrolling {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: inherit;
      row-gap: 4rem;
      
      > * {
        grid-column: 2;
      }
      
      > ul {
        scroll-snap-type: x mandatory;
        grid-column: 1 / -1;
        padding-inline: max(1rem,50% - var(--content) / 10px);
        padding-block-end: 1rem;
        
    
        li {
          scroll-snap-align: center;
          &:first-child {
            margin-left: calc(50% - var(--content) / 2);
          }
          &:last-child {
            margin-right: calc(50% - var(--content) / 2);
          }
        }
      }
      .scrolling-top {
        display: flex;
        justify-content: space-between;
        align-items: flex-end;
        .text {
          max-width: 50%;
          .icon {
            width: 100px;
          }
        }
        .buttons {
          display: flex;
          gap: 20px;
        }
      }
  }



.scroll-arrow {
    background: var(--heading-color);
    color: var(--white-color);
    padding: 11px 14px;
    border-radius: 100px;
    cursor: pointer;
    align-items: center;
    justify-content: center;
    &:last-child {
      background-color: var(--primary-color);
      color: black;
    }
  }
  .full-width {
    display: flex;
    gap: 1rem;
    overflow-x: auto;
    list-style: none;
    margin-top: 0;
    
    li {
      flex-basis: min(400px, 90%);
      flex-shrink: 0;
      background: #EBEBEB;
      color: #595566;
      border-radius: 8px;
      font-size: 1rem;
      padding: 2.75rem 2.1875rem;
      align-self: start;
      display: grid;
      gap: 10px;
      transition: all .4s ease-in-out;
      cursor: pointer;
     
      &:hover {
        background: var(--heading-color);
        color: var(--white-color);
        h3 {
          color: var(--white-color);
        }
        .icon-card {
          color: var(--primary-color);
        }
      }
      h3 {
        font-weight: 700;
        font-size: 1.5625rem;
        transition: all .4s ease-in-out;
      }
    }
    .icon-card {
      width: 40px;
      margin-bottom: 14px;
      color: var(--heading-color);
      transition: all .4s ease-in-out;
    }
  }
  
</style>



<script>
  document.addEventListener('DOMContentLoaded', () => {
    const container = document.querySelector('.scrolling ul');
    const leftButton = document.getElementById('scroll-left');
    const rightButton = document.getElementById('scroll-right');
    
    const cardWidth = 400; // Width of each card
    const scrollAmount = cardWidth + 16; // cardWidth + gap between cards
    
    leftButton.addEventListener('click', () => {
      container.scrollBy({ left: -scrollAmount, behavior: 'smooth' });
    });

    rightButton.addEventListener('click', () => {
      container.scrollBy({ left: scrollAmount, behavior: 'smooth' });
    });
  });
</script>
    
    
   